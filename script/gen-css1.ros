#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '(cl-css) :silent t))

(defpackage :ros.script.gen-css1.3893577447
  (:use :cl))
(in-package :ros.script.gen-css1.3893577447)


(defvar *font-style*
  (let ((font-list '(("Fira Code Regular"     "font/FiraCode-Regular.woff2")
		     ("Fira Sans Regular"     "font/FiraSans-Regular.woff2")
		     ("Fira Sans Book"        "font/FiraSans-Book.woff2")
		     ("Fira Mono Medium"      "font/FiraMono-Medium.woff2")
		     ("Fira Sans Light"       "font/FiraSans-Light.woff2")
		     ("Fira Sans Book Italic" "font/FiraSans-BookItalic.woff2"))))
    (loop for (font-family src) in font-list
          collect `("@font-face" :font-family ,font-family
                                 :src ,(concatenate 'string "url('" src "') format('woff2')")))))

(defvar *output*
  (let ((default-style (read-from-string
                         (uiop:read-file-string "styles/style-default.lisp")))
         (style-319 (read-from-string
                     (uiop:read-file-string "styles/style-319.lisp")))
         (style-320 (read-from-string
                     (uiop:read-file-string "styles/style-320.lisp")))
         (style-640 (read-from-string
                     (uiop:read-file-string "styles/style-640.lisp")))
         (style-850 (read-from-string
                     (uiop:read-file-string "styles/style-850.lisp"))))
    (append *font-style* default-style style-319
	    style-320 style-640 style-850)))

(defun main (&rest argv)
  (declare (ignorable argv))
  (format t "generating css....")
  (ensure-directories-exist "css/")
  (cl-css:compile-css "css/default.css" *output*)
  (format t "[OK]~&"))
;;; vim: set ft=lisp lisp:
