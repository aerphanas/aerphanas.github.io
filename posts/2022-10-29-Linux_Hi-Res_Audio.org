---
title: Linux Hi-Res Audio
author: aerphanas
desc: Berkenalan dengan sistem suara di Linux dan cara memutar audio dengan kualitas tinggi dengan mudah.
image: linux-hires-audio-fig1.png
---

#+title: Linux Hi-Res Audio

#+author: aerphanas
#+caption: A PipeWire Graph Qt GUI Interface
[[../images/linux-hires-audio-fig1.png]]

** Daftar Isi
:PROPERTIES:
:CUSTOM_ID: daftar-isi
:END:
- [[#pendahuluan][Pendahuluan]]
- [[#alsa][ALSA]]
- [[#sound-server][Sound Server]]
  - [[#pulseaudio][Pulseaudio]]
    - [[#konfigurasi-pulseaudio][Konfigurasi]]
  - [[#pipewire][Pipewire]]
    - [[#konfigurasi-pipewire][Konfigurasi]]
- [[#dafta-pustaka][Dafta Pustaka]]

** Pendahuluan
:PROPERTIES:
:CUSTOM_ID: pendahuluan
:END:

--------------

Saya memiliki hobi yang unik yaitu mendengarkan musik, musik yang saya
dengar merupakan musik yang memiliki kualitas tinggi yang biasanya
memiliki bit depth dari 16 sampai 24 bit dan memiliki sample rate sama
dengan diatas 44.1 kHz, agar bisa mendengarkan kualitas suara yang baik
di linux memerlukan beberapa configurasi, disinilah saya akan
membagikan bagaimana cara menkonfigurasi linux agar bisa memutar kualitas
audio yang berkualitas tinggi, linux memiliki sound API
yang bernama alsa yang berada di dalam linux kernel.

** ALSA
:PROPERTIES:
:CUSTOM_ID: alsa
:END:

--------------

ALSA adalah singkatan dari Advanced Linux Sound Architecture, pada
awalnya ALSA merupakan proyek yang terpisah dari kernel Linux sebelum
linux menggunakan ALSA, linux menggunakan OSS (Open Sound System) ALSA
sendiri masuk ke Linux kernel pada versi 2.5 dan pada Linux versi 2.6
OSS di gantikan oleh ALSA, ALSA juga Kompatibel dengan OSS sehingga
memudahkan aplikasi yang menggunakan OSS untuk memakai ALSA.

ALSA juga memiliki keunggulan dari OSS yaitu :

- MIDI synthesis berbasis Perangkat Keras.
- mixing Prangkat Keras untuk channels yang lebih dari satu.
- Operasi Full-duplex.
- mesupport multiprosesor.

ALSA sendiri memiliki API lebih rumit dari OSS jadi akan sulit
pengembang applikasi untuk menggunakan ALSA maka dibuatlah beberapa
sound servre yang gunanya memepermudah pembuatan aplikasi pada linux,
ALSA sendiri memerlukan tool agar user dapat mengontrol volume dsb
toolnya adalah [[https://pkgs.org/download/alsa-utils][alsa-utils]].

** Sound Server
:PROPERTIES:
:CUSTOM_ID: sound-server
:END:

--------------

Sound server adalah software yang berguna mengelola akses dan penggunaan
terhadap sound card dan biasanya berjalan pada latar belakang, saat ini
keberadaan sound server di linux ada 3 dan dari ke-3 itu memiliki
tujuannya masing-masing, contohnya JACK selalu mengedepankan urusan
latensi sehingga cocok untuk rekaman suara.

*** PulseAudio
:PROPERTIES:
:CUSTOM_ID: pulseaudio
:END:
PulseAudio adalah sebuah sound server yang ditujukan untuk Linux namun
ada beberapa sistem operasi yang memportingnya ke dalam sistemnya, pada
awalnya lebih tepatnya pada tahun 2004 pulseaudio memiliki nama
Polypaudio namun pada tahun 2006 barulah diubah menjadi PulseAudio.

**** Konfigurasi PulseAudio
:PROPERTIES:
:CUSTOM_ID: konfigurasi-pulseaudio
:END:
Mengkonfigurasi PulseAudio agar menmutar audio secara Hi-Res sangatlah
mudah, kita hanya perlu mengedit atau menambahkan beberapa line di dalam
configurasinya, konfigurasi PulseAudio berada di :

#+begin_src sh
/etc/pulse/daemon.conf
#+end_src

namun sebelum kita mengedit file itu kita harus login sebagai root,
setelah kita login kita bisa menambahkan :

#+begin_src sh
default-sample-rate = <ganti>
alternate-sample-rate = <ganti>
#+end_src

kita bisa mengganti berapa sample rate yang kita mau, rekomendasi saya
ubahlah menjadi :

#+begin_src sh
default-sample-rate = 44100
alternate-sample-rate = 48000
#+end_src

untuk PulseAudio versi 1.11 memiliki konfigurasi khusus, konfigurasi ini
berguna untuk mengubah sample sate menjadi otomatis sama dengan sumber audio,
konfigurasinya adalah

#+begin_src sh
avoid-resampling = true
#+end_src

untuk mengubah format output menjadi 24bit kita bisa menambahkan ini :

#+begin_src sh
default-sample-format = s24le
#+end_src

di PulseAudio kita juga bisa mengubah metode resample seuai keinginan
kita namun sebelum itu kita harus mengetahui sample apa yang didukung
oleh system kita dengan perintah :

#+begin_src sh
pulseaudio --dump-resample-methods
#+end_src

saya rekomendasikan menggunakan resample soxr-vhq karna memiliki
kualitas yang bagus, tambahkan konfigurasi :

#+begin_src sh
resample-method = soxr-vhq
#+end_src

seperti itulah saya mendapatkan kualitas suara yang bagus menggunakan
jika sedang menggunakan PulseAudio.

*** Pipewire
:PROPERTIES:
:CUSTOM_ID: pipewire
:END:
Pipewire merupakan sebuah Sound Server yang baru, rilis pertama pada
tahun 2017, dan pada tahun 2021 pipewire menjadi sound server bawaan
Linux Distro bernama Fedora 34 setelah itu mulailah beberapa distro
berpindah dari PulseAudio ke Pipewire, pada awalnya pipewire merupakan
sebuah program untuk menghandle video di Linux Distro yang berdampingan
dengan pulseaudio makadari itu sebelum bernama pipewire, pipewire
memiliki nama PulseVideo.

pipewire memiliki sebuah tujuan diantaranya :

- kompatibilitas untuk aplikas yang menggunakan Flatpak
- cara aman untuk merekam dan menangkap layar di Wayland compositor
- Kompatibel dengan aplikasi yang menggunakan JACK dan PulseAudio

**** Konfigurasi Pipewire
:PROPERTIES:
:CUSTOM_ID: konfigurasi-pipewire
:END:
Karna biasanya pipewire berjalan menggunakan user kita harus mengkopi
configurasi dari

#+begin_src sh
/usr/share/pipewire/pipewire.conf
#+end_src

ke

#+begin_src sh
~/.config/pipewire/pipewire.conf
#+end_src

setelah kita mengkopi contoh konfigurasi kita bisa membukanya dan
mengedit sesuai apa yang kita inginkan, jika ingin mengetahui semua
konfigurasi pipiwire bisa pergi ke wikinya.

untuk mendapatkan kualitas audio yang maksimal saya menggunakan
konfigurasi yang hampir sama dengan Pulseaudio yaitu mengubah sample
rate, untuk mengubah sample rate silakan anda membuka =pipewire.conf=
dengan text editor kesayangan anda, jika sudah silakan edit atau tambah
(bila tidak ada) configurasi :

#+begin_src sh
default.clock.rate          = <ganti>
default.clock.allowed-rates = [ <ganti> <ganti> ... ]
#+end_src

hampir mirip dengan PulseAudio, saya akan menggunakan 44100 sebagai
standar sample rate, namun disini ada yang berbeda yaitu configurasi

#+begin_src sh
default.clock.allowed-rates = [ <ganti> <ganti> ... ]
#+end_src

disini saya akan menggunakan 44100 48000 88200 96000 sebagai sample
rate, kegunaanya adalah pipewire akan otomatis mengubah sample rate
sesuai sumber audio tetapi menggunakan list, disinilah gunakan
samplerate yang disupport oleh DAC anda, saat ini configurasi saya
adalah :

#+begin_src sh
default.clock.rate          = 44100
default.clock.allowed-rates = [ 44100 48000 88200 96000 ]
#+end_src

untuk bit depth pipewire akan otomatis mengkonversi ke float32, namun
bila kita memiliki DAC yang mensupport int24 maka pipewire akan
menyesuaikanya.

** Dafta Pustaka
:PROPERTIES:
:CUSTOM_ID: dafta-pustaka
:END:

--------------

- Wikipedia\\
  → [[https://en.wikipedia.org/wiki/Advanced_Linux_Sound_Architecture][ALSA]]\\
  → [[https://en.wikipedia.org/wiki/PulseAudio][PulseAudio]]\\
  → [[https://en.wikipedia.org/wiki/PipeWire][Pipewire]]

- Gitlab Freedesktop\\
  → [[https://gitlab.freedesktop.org/pipewire/pipewire/-/wikis/home][Pipewire]]

- Freedesktop\\
  → [[https://www.freedesktop.org/wiki/Software/PulseAudio/][Pulseaudio]]\\
  → [[https://gitlab.freedesktop.org/rncbc/qpwgraph][Qpwgraph]]

- Piperiwe\\
  → [[https://pipewire.org/][Pipewire]]\\
  → [[https://gitlab.freedesktop.org/pipewire/pipewire/-/wikis/home][Pipewire wiki]]
